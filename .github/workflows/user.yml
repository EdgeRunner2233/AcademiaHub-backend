name: User Module CI

on:
  push:
    branches:
      - main
      - dev-user
    tags:
      - v*

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      SECRET_KEY: "dev"
      SQLALCHEMY_DATABASE_URI: "sqlite:///:memory:"

    defaults:
      run:
        working-directory: ./services/user

    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt

      - name: Test with pytest
        run: pytest tests --cov --cov-report=xml:user-module-coverage-${{ matrix.python-version }}.xml

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: user-module-coverage-report-${{ matrix.python-version }}
          path: services/user/user-module-coverage-${{ matrix.python-version }}.xml
          retention-days: 3
        if: ${{ always() }}

      - name: Report Coveralls
        run: curl -sL https://coveralls.io/coveralls-linux.tar.gz | tar -xz && ./coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}

  build-docker-image:
    needs: test

    runs-on: ubuntu-latest

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}-Module-User

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: services/user
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
